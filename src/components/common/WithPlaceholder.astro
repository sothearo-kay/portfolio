---
import { getThumbHash } from "~/utils/placeholder"

interface Props {
  src: string
  class?: string
}

const { src, class: className } = Astro.props
const thumbHash = await getThumbHash(src)
---

<div class:list={["wrapper", className]}>
  <div class="placeholder" style={`background-image: url(${thumbHash})`}></div>
  <slot />
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const wrappers = document.querySelectorAll(".wrapper")

    wrappers.forEach((wrapper) => {
      const img = wrapper.querySelector("img")
      const placeholder = wrapper.querySelector(".placeholder")

      if (img && placeholder) {
        const handleLoad = () => {
          wrapper.classList.add("loaded")
          setTimeout(() => {
            wrapper.classList.add("revealed")
          }, 550)
        }

        img.addEventListener("load", handleLoad)

        if (img.complete) {
          handleLoad()
        }
      }
    })
  })
</script>

<style>
  .wrapper {
    position: relative;
    width: 100%;
    overflow: hidden;

    &.revealed {
      overflow: visible;
    }

    &.loaded {
      .placeholder {
        opacity: 0;
      }

      :global(img) {
        opacity: 1;
      }
    }

    .placeholder {
      position: absolute;
      inset: 0;
      background-size: cover;
      background-position: center;
      transform: scale(1.05);
      opacity: 1;
      transition-delay: 500ms;
      pointer-events: none;
    }
    :global(img) {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
      opacity: 0;
      transition: opacity 500ms;
    }
  }
</style>
