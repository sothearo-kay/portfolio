---
import { Picture } from "astro:assets"
import StarIcon from "~/icons/star.svg"
import Separator from "../common/Separator.astro"

interface Props {
  title: string
  coverId: string
  rating?: number
}

const { title, coverId, rating } = Astro.props
---

<div class="card">
  <div class="wrapper">
    <Picture
      src={`https://mangadex.org/covers/${coverId}.jpg.512.jpg`}
      alt={title}
      width={256}
      height={384}
      widths={[256, 512]}
      formats={["avif", "webp"]}
      class="cover"
      data-loaded="false"
    />
  </div>
  <h3 class="title">
    {title}
    {rating && (
      <div class="rating-section">
        <Separator />
        <div class="stars">
          {Array.from({ length: rating }, () => (
            <StarIcon class="star" />
          ))}
        </div>
      </div>
    )}
  </h3>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const cards = document.querySelectorAll(".card")

    cards.forEach((card) => {
      const img = card.querySelector("img")

      if (img) {
        img.addEventListener("load", () => {
          img.setAttribute("data-loaded", "true")
        })

        if (img.complete) {
          img.setAttribute("data-loaded", "true")
        }
      }
    })
  })
</script>

<style>
.card {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  .wrapper {
    position: relative;
    width: 100%;
    aspect-ratio: 2/3;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background: linear-gradient(
      90deg,
      var(--color-skeleton-from) 0%,
      var(--color-skeleton-to) 50%,
      var(--color-skeleton-from) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 2s ease-in-out infinite;

    &:has(img[data-loaded="true"]) {
      animation: none;
    }
  }

  .cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    opacity: 0;
    transition: opacity 0.3s ease;

    &[data-loaded="true"] {
      opacity: 1;
    }
  }

  .title {
    font: var(--font-sm);
    font-family: var(--font-heading);
    font-weight: 700;
    color: var(--color-foreground);
    text-transform: capitalize;
    margin-block: 0;

    .rating-section {
      display: flex;
      margin-top: 0.125rem;
      align-items: center;
      gap: 0.5rem;

      & .separator {
        flex: 1;
      }

      .stars {
        display: flex;
        gap: 0.125rem;

        .star {
          width: 0.75rem;
          height: 0.75rem;
          color: #fbbf24;
        }
      }
    }
  }
}

@keyframes shimmer {
  100% {
    background-position-x: -200%;
  }
}
</style>
