---
import MoonIcon from "~/icons/moon.svg"
import SunIcon from "~/icons/sun.svg"
import Hidden from "./common/Hidden.astro"
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
  <SunIcon class="icon sun" />
  <MoonIcon class="icon moon" />
  <Hidden>
    Switch Colorscheme
  </Hidden>
</button>

<script>
document.addEventListener("astro:page-load", () => {
  const themeToggle = document.getElementById("theme-toggle")
  const html = document.documentElement

  if (!themeToggle)
    return

  const isAppearanceTransition = typeof document !== "undefined"
    // @ts-expect-error: Transition API
    && document.startViewTransition
    && !window.matchMedia("(prefers-reduced-motion: reduce)").matches

  function toggleTheme(event: MouseEvent) {
    const isDark = html.getAttribute("data-theme") === "dark"

    if (!isAppearanceTransition || !event) {
      if (isDark) {
        html.removeAttribute("data-theme")
        localStorage.setItem("theme", "light")
      }
      else {
        html.setAttribute("data-theme", "dark")
        localStorage.setItem("theme", "dark")
      }
      return
    }

    const x = event.clientX
    const y = event.clientY
    const endRadius = Math.hypot(
      Math.max(x, innerWidth - x),
      Math.max(y, innerHeight - y),
    )

    const transition = document.startViewTransition(() => {
      if (isDark) {
        html.removeAttribute("data-theme")
        localStorage.setItem("theme", "light")
      }
      else {
        html.setAttribute("data-theme", "dark")
        localStorage.setItem("theme", "dark")
      }
    })

    // Animate the transition with a circular clip path
    transition.ready.then(() => {
      const clipPath = [
        `circle(0px at ${x}px ${y}px)`,
        `circle(${endRadius}px at ${x}px ${y}px)`,
      ]

      html.animate(
        {
          clipPath,
        },
        {
          duration: 400,
          easing: "ease-in",
          pseudoElement: "::view-transition-new(root)",
        },
      )
    })
  }

  themeToggle.addEventListener("click", toggleTheme)
})
</script>

<style>
  .theme-toggle {
    width: 2rem;
    height: 2rem;
    border-radius: 0.5rem;
    background-color: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.15s ease-in-out;
    transition-property: background-color, color;

    &:hover {
      background-color: var(--color-accent);
      color: var(--color-foreground);
    }

    &:focus-visible {
      outline: 1px solid var(--color-foreground);
    }

    .icon {
      width: 1rem;
      height: 1rem;

      &.sun {
        display: block;
      }

      &.moon {
        display: none;
      }
    }
  }

:global([data-theme="dark"]) .theme-toggle {
  .icon {
    &.sun {
      display: none;
    }

    &.moon {
      display: block;
    }
  }
}
</style>
