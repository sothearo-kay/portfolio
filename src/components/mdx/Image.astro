---
import type { HTMLAttributes } from "astro/types"

export interface Props extends HTMLAttributes<"img"> {
  src: string
  alt: string
}

const {
  src,
  alt,
  loading = "lazy",
  decoding = "async",
  ...rest
} = Astro.props
---

<div class="image-wrapper">
  <img
    {src}
    {alt}
    {loading}
    {decoding}
    {...rest}
  />
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const wrappers = document.querySelectorAll(".image-wrapper")

    wrappers.forEach((wrapper) => {
      const img = wrapper.querySelector("img")

      if (img) {
        const handleLoad = () => {
          wrapper.classList.add("loaded")
        }

        img.addEventListener("load", handleLoad)

        if (img.complete) {
          handleLoad()
        }
      }
    })
  })
</script>

<style>
  .image-wrapper {
    position: relative;
    display: inline-flex;

    :global(img) {
      display: block;
      width: 100%;
      clip-path: inset(0% 0% 100% 0%);
      transition: clip-path 500ms cubic-bezier(0.4, 0, 0.2, 1);
    }

    &.loaded {
      :global(img) {
        clip-path: inset(0%);
      }
    }
  }
</style>
