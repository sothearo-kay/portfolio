---
import ArrowUpRightIcon from "~/icons/arrow/arrow-up-right.svg"
import Container from "../common/Container.astro"
import Heading from "../common/Heading.astro"
import Paragraph from "../common/Paragraph.astro"

interface Props {
  url: string
  icon: typeof import("*.svg").default
  label: string
  username: string
}

const { url, icon: Icon, label, username } = Astro.props

const largerIconLabels = ["KhmerCoder", "Facebook"]
const needsLargerIcon = largerIconLabels.includes(label)
---

<a href={url} target="_blank" rel="noopener noreferrer" class="card">
  <Container class="content">
    <div class="icon-wrapper">
      <Icon class:list={["icon", needsLargerIcon && "large"]} />
    </div>
    <div class="info">
      <Heading as="h2" size="md" class="heading" reset>{label}</Heading>
      <Paragraph secondary size="xs" reset>{username}</Paragraph>
    </div>
    <ArrowUpRightIcon class="arrow" />
  </Container>
</a>

<style>
  .card {
    position: relative;
    display: block;
    padding-block: 1.25rem;

    &::before,
    &::after {
      content: '';
      position: absolute;
      height: 1px;
      background: var(--color-separator);
      z-index: -1;
    }

    &::before {
      top: 0;
    }

    &::after {
      bottom: 0;
    }

    @media (max-width: 768px) {
      &::before,
      &::after {
        width: 100vw;
        display: block;
      }

      &:first-child::before {
        display: none;
      }

      &:last-child::after {
        display: none;
      }
    }

    @media (min-width: 769px) {
      &:nth-child(odd)::before,
      &:nth-child(odd)::after {
        width: calc(200% + 1rem);
      }

      &:nth-child(1)::before {
        display: none;
      }

      &:nth-child(odd):nth-last-child(-n+2)::after {
        display: none;
      }
    }

    @media (hover: none) {
      & :global(.heading) {
        text-decoration: underline;
        text-underline-offset: 3px;
      }
    }

    &:hover {
      & :global(.heading) {
        text-decoration: underline;
        text-underline-offset: 3px;
      }

      .arrow {
        color: var(--color-foreground);
        transform: translateX(4px) translateY(-2px);
      }
    }

    .content {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 2.5rem;
      height: 2.5rem;
    }

    .icon {
      width: 2.25rem;
      height: 2.25rem;
      flex-shrink: 0;

      &.large {
        width: 2.5rem;
        height: 2.5rem;
      }
    }

    .info {
      flex: 1;
      min-width: 0;

      & .text {
        font-weight: 500;
        margin-top: -0.05em;
      }
    }

    .arrow {
      width: 1rem;
      height: 1rem;
      color: var(--color-foreground-muted);
      flex-shrink: 0;
      transition-property: color, transform;
      transition-duration: 0.2s;
      transition-timing-function: ease;
    }
  }
</style>
